HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			13 [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,data3,data2,data1,data0];
			9 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			8 [DEPTH=0,WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,data1,data0];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			15 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,cout,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
			12 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result4,result3,result2,result1,result0,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
			11 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
			7 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,dataa1,dataa0,datab1,datab0,cin];
			6 [DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,dataa1,dataa0,datab1,datab0,cin];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			14 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=SUB,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [COUT,RESULT3,RESULT2,RESULT1,RESULT0,DATAB0,DATAB1,DATAB2,DATAB3,DATAA0,DATAA1,DATAA2,DATAA3];
			10 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=ADD,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT3,RESULT2,RESULT1,RESULT0,DATAB0,DATAB1,DATAB2,DATAB3,DATAA0,DATAA1,DATAA2,DATAA3];
			5 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT1,RESULT0,DATAB0,DATAB1,DATAA0,DATAA1];
		}
	}
	proc_mux.v
	{
		regn3 [] []
		{
			4 [] [];
		}
		dec2to4 [] []
		{
			3 [] [];
		}
		regn2 [] []
		{
			2 [] [];
		}
		upcount1 [] []
		{
			1 [] [];
		}
		proc_mux [n=6,n=4] []
		{
			0 [n=6,n=4] [];
		}
	}
}
TREE
{
	proc_mux::(0,0):(0): proc_mux.v
	{
		upcount1:1:(16,0):(347,counter): proc_mux.v
		{
			lpm_add_sub:5:(100,0):(14): lpm_add_sub.tdf
			{
				addcore:6:(212,4):(40,adder): addcore.tdf
				{
					addcore:7:(178,10):(37,adder0): addcore.tdf;
				}
				altshift:8:(222,2):(53,result_ext_latency_ffs): altshift.tdf;
				altshift:9:(224,2):(63,carry_ext_latency_ffs): altshift.tdf;
				altshift:9:(226,2):(71,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		regn3:4:(19,0):(348,functionreg): proc_mux.v;
		dec2to4:3:(23,0):(349,decY): proc_mux.v;
		dec2to4:3:(22,0):(350,decX): proc_mux.v;
		regn2:2:(63,0):(351,reg_1): proc_mux.v;
		regn2:2:(64,0):(352,reg_2): proc_mux.v;
		regn2:2:(65,0):(353,reg_3): proc_mux.v;
		regn2:2:(66,0):(354,reg_A): proc_mux.v;
		lpm_add_sub:10:(71,0):(355): lpm_add_sub.tdf
		{
			addcore:11:(212,4):(46,adder): addcore.tdf
			{
				addcore:12:(178,10):(43,adder0): addcore.tdf;
			}
			altshift:13:(222,2):(65,result_ext_latency_ffs): altshift.tdf;
			altshift:9:(224,2):(79,carry_ext_latency_ffs): altshift.tdf;
			altshift:9:(226,2):(87,oflow_ext_latency_ffs): altshift.tdf;
		}
		lpm_add_sub:14:(73,0):(356): lpm_add_sub.tdf
		{
			addcore:15:(212,4):(46,adder): addcore.tdf
			{
				addcore:12:(178,10):(43,adder0): addcore.tdf;
			}
			altshift:13:(222,2):(65,result_ext_latency_ffs): altshift.tdf;
			altshift:9:(224,2):(79,carry_ext_latency_ffs): altshift.tdf;
			altshift:9:(226,2):(87,oflow_ext_latency_ffs): altshift.tdf;
		}
		regn2:2:(75,0):(357,reg_G): proc_mux.v;
		regn2:2:(62,0):(358,reg_0): proc_mux.v;
	}
}
